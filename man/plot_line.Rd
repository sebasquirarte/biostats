% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_line.R
\name{plot_line}
\alias{plot_line}
\title{Create Simple, Professional Line Plots}
\usage{
plot_line(
  data,
  x,
  y,
  group = NULL,
  facet = NULL,
  stat = NULL,
  error = "se",
  error_width = 0.2,
  colors = NULL,
  title = NULL,
  xlab = NULL,
  ylab = NULL,
  legend_title = NULL,
  points = TRUE,
  line_size = 1,
  point_size = 3,
  text_size = 12
)
}
\arguments{
\item{data}{A data frame containing the variables to plot}

\item{x}{Character string specifying the x-axis variable (typically time or ordered)}

\item{y}{Character string specifying the y-axis variable (measurement or outcome)}

\item{group}{Optional character string specifying the grouping variable for multiple lines}

\item{facet}{Optional character string specifying the faceting variable}

\item{stat}{Optional character string for statistical aggregation; one of "mean" or "median"}

\item{error}{Optional character string for error bars; one of "se" (standard error, default),
"sd" (standard deviation), "ci" (95\% confidence interval), or "none"}

\item{error_width}{Numeric; width of the error bar caps (default: 0.2)}

\item{colors}{Character vector of colors for lines. If NULL, uses TealGrn color palette}

\item{title}{Optional character string for the plot title}

\item{xlab}{Optional character string for the x-axis label}

\item{ylab}{Optional character string for the y-axis label}

\item{legend_title}{Optional character string for the legend title}

\item{points}{Logical; whether to add points to the lines (default: TRUE)}

\item{line_size}{Numeric; thickness of the lines (default: 1)}

\item{point_size}{Numeric; size of the points if shown (default: 3)}

\item{text_size}{Numeric value specifying the base text size (default: 12)}
}
\value{
A ggplot2 object that can be further customized
}
\description{
Generates publication-ready line plots with minimal code using ggplot2.
}
\examples{
# Simulated clinical data
clinical_df <- clinical_data(visit = 4)

# Line plot with mean and standard error by treatment
plot_line(clinical_df, x = "visit", y = "biomarker",
          group = "treatment", stat = "mean", error = "se")

}
